% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make.R
\name{make}
\alias{make}
\title{Run R Script If Needed}
\usage{
make(recipe, prereq, target, include = TRUE, debug = FALSE,
  force = FALSE, recon = FALSE, silent = FALSE, ...)
}
\arguments{
\item{recipe}{script filename.}

\item{prereq}{one or more underlying files, required by the script. For
example, data files and/or scripts.}

\item{target}{one or more output files, produced by the script. Directory
names can also be used.}

\item{include}{whether to automatically include the script itself as a
prerequisite file. This means that if the script file has been
modified, it should be run.}

\item{debug}{whether to show a diagnostic table of files and time last
modified.}

\item{force}{whether to run the R script unconditionally.}

\item{recon}{whether to return \code{TRUE} or \code{FALSE}, without actually
running the R script.}

\item{silent}{whether to suppress messages.}

\item{\dots}{passed to \code{source}.}
}
\value{
\code{TRUE} or \code{FALSE}, indicating whether the script was run.
}
\description{
Run an R script if underlying files have changed, otherwise do nothing.
}
\note{
This function provides functionality similar to makefile rules, to determine
whether a script should be (re)run or not.

If any \code{target} is either missing or is older than any \code{prereq},
then the script is run.
}
\examples{
\dontrun{
# Here, script.R uses input.dat, creating output.dat
make("script.R", "input.dat", "output.dat")
make("script.R", "input.dat", "output.dat", silent=TRUE)
make("script.R", "input.dat", "output.dat", debug=TRUE)

# Sequential scripts
make("01_analysis.R", "data.dat", "results.dat")
make("02_plots.R", "results.dat", "plots")
make("03_tables.R", "results.dat", "tables")
}

}
\references{
Stallman, R. M. \emph{et al.} An introduction to makefiles. Chapter 2 in the
\emph{\href{https://www.gnu.org/software/make/manual/make.pdf}{GNU Make
manual}}.
}
\seealso{
\code{\link{file.exists}} and \code{\link{file.mtime}} are the underlying
functions used to check if files are missing or have changed.

\code{\link{source}} is the underlying function to run a script.
}
